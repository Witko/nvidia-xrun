#!/usr/bin/env bash

function printHelp {
  echo "Utility to run games and applications in separate X on discrete Nvidia graphic card"
  echo "Usage: "
  echo "nvidia-xrun [<options>] [<app>]"
  echo "Options: "
  echo "  -d    Dry run - prints the final command but does not execute it"
}

DRY_RUN=0
if [ "$1" == "-d" ]; then
    DRY_RUN=1
    shift 1
fi

function say { echo ">>Dry run. Command: $*"; }
if [ $DRY_RUN -eq 1 ]; then
    execute='say'
else
    execute='eval'
fi

function die {
    (>&2 echo "$@")
    exit 1
}

# load config file
. /etc/default/nvidia-xrun

if [[ $EUID -eq 0 ]]; then
   echo "This script must not be run as root" >&2
   exit 1
fi

# calculate current VT
LVT="vt$(fgconsole)"

# calculate first usable display
XNUM=0
SOCK=/tmp/.X11-unix/X$XNUM
while [[ -e "$SOCK" ]]
do
  XNUM=$(( XNUM + 1 ))
  SOCK=/tmp/.X11-unix/X$XNUM
done

NEWDISP=":$XNUM"

if [[ -n "$*" ]] # generate exec line if arguments are given
then
  # test if executable exists in path
  if [[ -x "$(command -v "$1" 2> /dev/null)" ]]
  then
    # generate exec line
    CMD="$(command -v "$1")"
  # test if executable exists on disk
  elif [[ -e "$(realpath "$1")" ]]
  then
    # generate exec line
    CMD="$(realpath "$1")"
  else
    echo "$1: No such executable!"
    exit 1
  fi
  shift 1
  ARGV=("$CMD" "$@")
else # prepare to start new X sessions if no arguments passed
  ARGV=()
fi

CLIENT=(/etc/X11/xinit/nvidia-xinitrc "${ARGV[*]}")
SERVER=("$NEWDISP" "$LVT" -nolisten tcp -br -config nvidia-xorg.conf -configdir nvidia-xorg.conf.d)
COMMAND=(xinit "${CLIENT[@]}" -- "${SERVER[@]}")

# ---------- TURNING ON GPU -----------
echo 'Loading nvidia'
$execute "sudo nvidia-toggle on" || die "Could not load nvidia"

# ---------- EXECUTING COMMAND --------
$execute "${COMMAND[*]}" || die "Could not execute command"

# --------- TURNING OFF GPU ----------
echo 'Unloading nvidia'
$execute "sudo nvidia-toggle off" || die "Could not unload nvidia"
