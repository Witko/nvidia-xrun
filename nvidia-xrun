#!/bin/bash

DRY_RUN=0
function printHelp {
  echo "Utility to run games and applications in separate X on discrete Nvidia graphic card"
  echo "Usage: "
  echo "nvidia-xrun [<options>] [<app>]"
  echo "Options: "
  echo "  -d    Dry run - prints the final command but does not execute it"
}

function execute {
  if [ $DRY_RUN -eq 1 ]
    then
    echo ">>Dry run. Command: $*"
  else
    eval $*
  fi
}

if [ "$1" == "-d" ]
  then
    DRY_RUN=1
    shift 1
fi

## check if script is running through sudo/su or directly from root user
if [[ ${SUDO_USER:-$USER} == "root" ]]; then
   if [[ "$SUDO_USER" == "" ]]; then	
      echo "Do not run it direclty from root user!";
      echo "Run it from a normal user and use sudo or su instead.";
   fi
   exit 1;
fi

## check if script is running through X
if [[ $DISPLAY != "" && `tty` == "/dev/pts/0" ]]; then
   execute "sudo -i openvt -s nvidia-xrun $*"
   if [[ $DRY_RUN == "1" ]]; then
      exit 0;
   fi
fi

## check if does have necessary permission
if [[ $EUID != "0" ]]; then
   execute "sudo -i nvidia-xrun $*"
   exit 0;
fi

## check current vt in use
[[ $(< '/sys/class/tty/tty0/active') =~ tty([0-9]{1,}) ]]
LVT=${BASH_REMATCH[1]}



echo 'Waking up nvidia GPU'
execute "sudo tee /proc/acpi/bbswitch <<<ON"

echo 'Loading nvidia module'
execute "sudo modprobe nvidia"

echo 'Loading nvidia_drm module'
execute "sudo modprobe nvidia_drm"



echo 'Executing the nvidia-xrun-core'
execute "sudo -i -u ${SUDO_USER:-$USER} nvidia-xrun-core $*"



echo 'Unloading nvidia_drm module'
execute "sudo rmmod nvidia_drm"

echo 'Unloading nvidia_modeset module'
execute "sudo rmmod nvidia_modeset"

echo 'Unloading nvidia module'
execute "sudo rmmod nvidia"

echo 'Turning off nvidia GPU'
execute "sudo tee /proc/acpi/bbswitch <<<OFF"

echo -n 'Current state of nvidia GPU: '
execute "cat /proc/acpi/bbswitch"

## change to the previous vt
chvt $LVT
