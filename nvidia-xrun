#!/bin/bash
DRY_RUN=0
function printHelp {
  echo "Utility to run games and applications in separate X on discrete Nvidia graphic card"
  echo "Usage: "
  echo "nvidia-xrun [<options>] [<app>]"
  echo "Options: "
  echo "  -d    Dry run - prints the final command but does not execute it"
}

function execute {
  if [ ${DRY_RUN} -eq 1 ]
    then
    echo ">>Dry run. Command: $*"
  else
    eval $*
  fi
}

function die {
    (>&2 echo $@)
    exit 1
}

if [[ $EUID -eq 0 ]]; then
   echo "This script must not be run as root" >&2
   exit 1
fi

if [ "$1" == "-d" ]
  then
    DRY_RUN=1
    shift 1
fi

# calculate current VT
LVT=`fgconsole`

# calculate first usable display
XNUM="-1"
SOCK="something"
while [ ! -z "$SOCK" ] 
do
  XNUM=$(( $XNUM + 1 ))
  SOCK=$(ls -A -1 /tmp/.X11-unix | grep "X$XNUM" )
done

NEWDISP=":$XNUM"

if [ ! -z "$*" ] # generate exec line if arguments are given
then 
  # test if executable exists in path
  if [ -x "$(which $1 2> /dev/null)" ]
  then
    # generate exec line
    EXECL="$(which $1)"
  # test if executable exists on disk
  elif [ -e "$(realpath "$1")" ]
  then
    # generate exec line
    EXECL="$(realpath "$1")"
  else
    echo "$1: No such executable!"
    exit 1
  fi
  shift 1
  EXECL="$EXECL $*"
else # prepare to start new X sessions if no arguments passed
  EXECL=""
fi

EXECL="/etc/X11/xinit/nvidia-xinitrc $EXECL"

COMMAND="xinit $EXECL -- $NEWDISP vt$LVT -nolisten tcp -br -config nvidia-xorg.conf -configdir nvidia-xorg.conf.d"

# ---------- TURNING ON GPU -----------
echo 'Loading nvidia'
execute "sudo nvidia-toggle on" || die "Could not load nvidia"

# ---------- EXECUTING COMMAND --------
execute ${COMMAND} || die "Could not execute command"

# --------- TURNING OFF GPU ----------
echo 'Unloading nvidia'
execute "sudo nvidia-toggle off" || die "Could not unload nvidia"
